#!/usr/bin/env tsx

/**
 * Script de reset complet de la base de donn√©es
 * Usage: npm run db:reset
 */

import { existsSync, unlinkSync } from "fs";
import { execSync } from "child_process";
import { logger } from "../../lib/utils/logging/logger";
import path from "path";

async function resetDatabase() {
  try {
    logger.info("üóëÔ∏è Reset complet de la base de donn√©es...");
    
    const dbPath = path.join(process.cwd(), "data", "logistix.db");
    const dbShmPath = `${dbPath}-shm`;
    const dbWalPath = `${dbPath}-wal`;
    
    // Supprimer les fichiers de base de donn√©es s'ils existent
    [dbPath, dbShmPath, dbWalPath].forEach(filePath => {
      if (existsSync(filePath)) {
        unlinkSync(filePath);
        logger.info(`Supprim√©: ${path.basename(filePath)}`);
      }
    });
    
    // Recr√©er la base avec les migrations
    logger.info("üèóÔ∏è Recr√©ation de la base de donn√©es...");
    execSync("npm run db:migrate", { 
      cwd: process.cwd(),
      stdio: "inherit"
    });
    
    logger.info("‚úÖ Base de donn√©es r√©initialis√©e avec succ√®s");
    
  } catch (error) {
    logger.error("‚ùå Erreur lors du reset", { 
      error: error instanceof Error ? error.message : String(error)
    });
    
    process.exit(1);
  }
}

if (require.main === module) {
  resetDatabase();
}