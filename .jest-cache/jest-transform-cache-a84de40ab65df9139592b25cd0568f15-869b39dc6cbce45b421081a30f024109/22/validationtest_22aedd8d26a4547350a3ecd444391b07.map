{"file":"F:\\Youcloud\\Documents\\Projets\\Logistix\\lib\\utils\\__tests__\\validation.test.ts","mappings":";;AAAA,mCAA6C;AAC7C,8CAOsB;AAEtB,IAAA,iBAAQ,EAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,IAAA,iBAAQ,EAAC,wBAAwB,EAAE,GAAG,EAAE;QACtC,MAAM,SAAS,GAAG;YAChB,EAAE,EAAE,QAAQ;YACZ,KAAK,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;YACzC,UAAU,EAAE,gBAAgB;YAC5B,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,mBAAmB,EAAE,EAAE,EAAE;YACnD,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,gCAAgC,EAAE,CAAC;YACnD,UAAU,EAAE,sBAAsB;YAClC,OAAO,EAAE,sBAAsB;SAChC,CAAA;QAED,IAAA,WAAE,EAAC,2CAA2C,EAAE,GAAG,EAAE;YACnD,IAAA,eAAM,EAAC,GAAG,EAAE,CAAC,mCAAsB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAA;QACrE,CAAC,CAAC,CAAA;QAEF,IAAA,WAAE,EAAC,wBAAwB,EAAE,GAAG,EAAE;YAChC,MAAM,WAAW,GAAG,EAAE,GAAG,SAAS,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA;YAC5C,IAAA,eAAM,EAAC,GAAG,EAAE,CAAC,mCAAsB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,EAAE,CAAA;QACnE,CAAC,CAAC,CAAA;QAEF,IAAA,WAAE,EAAC,qCAAqC,EAAE,GAAG,EAAE;YAC7C,MAAM,WAAW,GAAG,EAAE,GAAG,SAAS,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAA;YAC7E,IAAA,eAAM,EAAC,GAAG,EAAE,CAAC,mCAAsB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,EAAE,CAAA;QACnE,CAAC,CAAC,CAAA;QAEF,IAAA,WAAE,EAAC,8BAA8B,EAAE,GAAG,EAAE;YACtC,MAAM,WAAW,GAAG,EAAE,GAAG,SAAS,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,CAAA;YAC5E,IAAA,eAAM,EAAC,GAAG,EAAE,CAAC,mCAAsB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,EAAE,CAAA;QACnE,CAAC,CAAC,CAAA;QAEF,IAAA,WAAE,EAAC,iCAAiC,EAAE,GAAG,EAAE;YACzC,MAAM,WAAW,GAAG,EAAE,GAAG,SAAS,EAAE,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,EAAE,CAAA;YACpE,IAAA,eAAM,EAAC,GAAG,EAAE,CAAC,mCAAsB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,EAAE,CAAA;QACnE,CAAC,CAAC,CAAA;QAEF,IAAA,WAAE,EAAC,4CAA4C,EAAE,GAAG,EAAE;YACpD,MAAM,WAAW,GAAG,EAAE,GAAG,SAAS,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,mBAAmB,EAAE,CAAC,CAAC,EAAE,EAAE,CAAA;YACzF,IAAA,eAAM,EAAC,GAAG,EAAE,CAAC,mCAAsB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,EAAE,CAAA;QACnE,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,IAAA,iBAAQ,EAAC,8BAA8B,EAAE,GAAG,EAAE;QAC5C,MAAM,UAAU,GAAG;YACjB;gBACE,EAAE,EAAE,QAAQ;gBACZ,KAAK,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;gBACzC,UAAU,EAAE,gBAAgB;gBAC5B,MAAM,EAAE,MAAM;gBACd,IAAI,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,mBAAmB,EAAE,EAAE,EAAE;gBACnD,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,gCAAgC,EAAE,CAAC;gBACnD,UAAU,EAAE,sBAAsB;gBAClC,OAAO,EAAE,sBAAsB;aAChC;SACF,CAAA;QAED,IAAA,WAAE,EAAC,wCAAwC,EAAE,GAAG,EAAE;YAChD,IAAA,eAAM,EAAC,GAAG,EAAE,CAAC,IAAA,yCAA4B,EAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAA;QACtE,CAAC,CAAC,CAAA;QAEF,IAAA,WAAE,EAAC,2BAA2B,EAAE,GAAG,EAAE;YACnC,IAAA,eAAM,EAAC,GAAG,EAAE,CAAC,IAAA,yCAA4B,EAAC,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAA;QAC1D,CAAC,CAAC,CAAA;QAEF,IAAA,WAAE,EAAC,+BAA+B,EAAE,GAAG,EAAE;YACvC,IAAA,eAAM,EAAC,GAAG,EAAE,CAAC,IAAA,yCAA4B,EAAC,cAAc,CAAC,CAAC,CAAC,OAAO,EAAE,CAAA;QACtE,CAAC,CAAC,CAAA;QAEF,IAAA,WAAE,EAAC,wCAAwC,EAAE,GAAG,EAAE;YAChD,MAAM,YAAY,GAAG,CAAC,EAAE,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;YACnD,IAAA,eAAM,EAAC,GAAG,EAAE,CAAC,IAAA,yCAA4B,EAAC,YAAY,CAAC,CAAC,CAAC,OAAO,EAAE,CAAA;QACpE,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,IAAA,iBAAQ,EAAC,kBAAkB,EAAE,GAAG,EAAE;QAChC,IAAA,WAAE,EAAC,+CAA+C,EAAE,GAAG,EAAE;YACvD,MAAM,MAAM,GAAG,6BAAgB,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAA;YAC5D,IAAA,eAAM,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YAC3B,IAAA,eAAM,EAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QAC9B,CAAC,CAAC,CAAA;QAEF,IAAA,WAAE,EAAC,2BAA2B,EAAE,GAAG,EAAE;YACnC,MAAM,MAAM,GAAG,6BAAgB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;YACzC,IAAA,eAAM,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YAC3B,IAAA,eAAM,EAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;QAC/B,CAAC,CAAC,CAAA;QAEF,IAAA,WAAE,EAAC,gCAAgC,EAAE,GAAG,EAAE;YACxC,IAAA,eAAM,EAAC,GAAG,EAAE,CAAC,6BAAgB,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAA;QACxE,CAAC,CAAC,CAAA;QAEF,IAAA,WAAE,EAAC,qCAAqC,EAAE,GAAG,EAAE;YAC7C,IAAA,eAAM,EAAC,GAAG,EAAE,CAAC,6BAAgB,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAA;QACzE,CAAC,CAAC,CAAA;QAEF,IAAA,WAAE,EAAC,8BAA8B,EAAE,GAAG,EAAE;YACtC,IAAA,eAAM,EAAC,GAAG,EAAE,CAAC,6BAAgB,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAA;QACxE,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,IAAA,iBAAQ,EAAC,oBAAoB,EAAE,GAAG,EAAE;QAClC,IAAA,WAAE,EAAC,2CAA2C,EAAE,GAAG,EAAE;YACnD,MAAM,YAAY,GAAG,IAAI,eAAe,CAAC,gBAAgB,CAAC,CAAA;YAC1D,MAAM,MAAM,GAAG,IAAA,+BAAkB,EAAC,YAAY,CAAC,CAAA;YAC/C,IAAA,eAAM,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YAC3B,IAAA,eAAM,EAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QAC9B,CAAC,CAAC,CAAA;QAEF,IAAA,WAAE,EAAC,4CAA4C,EAAE,GAAG,EAAE;YACpD,MAAM,YAAY,GAAG,IAAI,eAAe,CAAC,EAAE,CAAC,CAAA;YAC5C,MAAM,MAAM,GAAG,IAAA,+BAAkB,EAAC,YAAY,CAAC,CAAA;YAC/C,IAAA,eAAM,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YAC3B,IAAA,eAAM,EAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;QAC/B,CAAC,CAAC,CAAA;QAEF,IAAA,WAAE,EAAC,qCAAqC,EAAE,GAAG,EAAE;YAC7C,MAAM,YAAY,GAAG,IAAI,eAAe,CAAC,wBAAwB,CAAC,CAAA;YAClE,yCAAyC;YACzC,MAAM,MAAM,GAAG,IAAA,+BAAkB,EAAC,YAAY,CAAC,CAAA;YAC/C,IAAA,eAAM,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YAC3B,IAAA,eAAM,EAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;QAC/B,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,IAAA,iBAAQ,EAAC,cAAc,EAAE,GAAG,EAAE;QAC5B,IAAA,WAAE,EAAC,8BAA8B,EAAE,GAAG,EAAE;YACtC,MAAM,SAAS,GAAG,sCAAsC,CAAA;YACxD,IAAA,eAAM,EAAC,GAAG,EAAE,CAAC,yBAAY,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAA;QACnE,CAAC,CAAC,CAAA;QAEF,IAAA,WAAE,EAAC,mCAAmC,EAAE,GAAG,EAAE;YAC3C,IAAA,eAAM,EAAC,GAAG,EAAE,CAAC,yBAAY,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAA;QAClE,CAAC,CAAC,CAAA;QAEF,IAAA,WAAE,EAAC,4BAA4B,EAAE,GAAG,EAAE;YACpC,IAAA,eAAM,EAAC,GAAG,EAAE,CAAC,yBAAY,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAA;QACxD,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,IAAA,iBAAQ,EAAC,gBAAgB,EAAE,GAAG,EAAE;QAC9B,IAAA,WAAE,EAAC,qCAAqC,EAAE,GAAG,EAAE;YAC7C,MAAM,SAAS,GAAG,sCAAsC,CAAA;YACxD,IAAA,eAAM,EAAC,GAAG,EAAE,CAAC,IAAA,2BAAc,EAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAA;QACvD,CAAC,CAAC,CAAA;QAEF,IAAA,WAAE,EAAC,mCAAmC,EAAE,GAAG,EAAE;YAC3C,IAAA,eAAM,EAAC,GAAG,EAAE,CAAC,IAAA,2BAAc,EAAC,YAAY,CAAC,CAAC,CAAC,OAAO,EAAE,CAAA;QACtD,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","names":[],"sources":["F:\\Youcloud\\Documents\\Projets\\Logistix\\lib\\utils\\__tests__\\validation.test.ts"],"sourcesContent":["import { describe, it, expect } from 'vitest'\r\nimport { \r\n  validateCreateMarketAnalysis, \r\n  validatePagination, \r\n  validateTaskId,\r\n  SimilarSaleInputSchema,\r\n  PaginationSchema,\r\n  TaskIdSchema\r\n} from '../validation'\r\n\r\ndescribe('Validation Schemas', () => {\r\n  describe('SimilarSaleInputSchema', () => {\r\n    const validSale = {\r\n      id: 'item-1',\r\n      price: { amount: 25.99, currency: 'EUR' },\r\n      size_title: 'T-shirt Medium',\r\n      status: 'sold',\r\n      user: { login: 'seller1', feedback_reputation: 95 },\r\n      photos: [{ url: 'https://example.com/photo1.jpg' }],\r\n      created_at: '2023-01-01T10:00:00Z',\r\n      sold_at: '2023-01-02T15:30:00Z'\r\n    }\r\n\r\n    it('should validate correct similar sale data', () => {\r\n      expect(() => SimilarSaleInputSchema.parse(validSale)).not.toThrow()\r\n    })\r\n\r\n    it('should reject empty ID', () => {\r\n      const invalidSale = { ...validSale, id: '' }\r\n      expect(() => SimilarSaleInputSchema.parse(invalidSale)).toThrow()\r\n    })\r\n\r\n    it('should reject negative price amount', () => {\r\n      const invalidSale = { ...validSale, price: { amount: -10, currency: 'EUR' } }\r\n      expect(() => SimilarSaleInputSchema.parse(invalidSale)).toThrow()\r\n    })\r\n\r\n    it('should reject empty currency', () => {\r\n      const invalidSale = { ...validSale, price: { amount: 25.99, currency: '' } }\r\n      expect(() => SimilarSaleInputSchema.parse(invalidSale)).toThrow()\r\n    })\r\n\r\n    it('should reject invalid photo URL', () => {\r\n      const invalidSale = { ...validSale, photos: [{ url: 'not-a-url' }] }\r\n      expect(() => SimilarSaleInputSchema.parse(invalidSale)).toThrow()\r\n    })\r\n\r\n    it('should reject negative feedback reputation', () => {\r\n      const invalidSale = { ...validSale, user: { login: 'seller1', feedback_reputation: -1 } }\r\n      expect(() => SimilarSaleInputSchema.parse(invalidSale)).toThrow()\r\n    })\r\n  })\r\n\r\n  describe('validateCreateMarketAnalysis', () => {\r\n    const validSales = [\r\n      {\r\n        id: 'item-1',\r\n        price: { amount: 25.99, currency: 'EUR' },\r\n        size_title: 'T-shirt Medium',\r\n        status: 'sold',\r\n        user: { login: 'seller1', feedback_reputation: 95 },\r\n        photos: [{ url: 'https://example.com/photo1.jpg' }],\r\n        created_at: '2023-01-01T10:00:00Z',\r\n        sold_at: '2023-01-02T15:30:00Z'\r\n      }\r\n    ]\r\n\r\n    it('should validate correct array of sales', () => {\r\n      expect(() => validateCreateMarketAnalysis(validSales)).not.toThrow()\r\n    })\r\n\r\n    it('should reject empty array', () => {\r\n      expect(() => validateCreateMarketAnalysis([])).toThrow()\r\n    })\r\n\r\n    it('should reject non-array input', () => {\r\n      expect(() => validateCreateMarketAnalysis('not an array')).toThrow()\r\n    })\r\n\r\n    it('should reject array with invalid sales', () => {\r\n      const invalidSales = [{ ...validSales[0], id: '' }]\r\n      expect(() => validateCreateMarketAnalysis(invalidSales)).toThrow()\r\n    })\r\n  })\r\n\r\n  describe('PaginationSchema', () => {\r\n    it('should validate correct pagination parameters', () => {\r\n      const result = PaginationSchema.parse({ page: 2, limit: 5 })\r\n      expect(result.page).toBe(2)\r\n      expect(result.limit).toBe(5)\r\n    })\r\n\r\n    it('should use default values', () => {\r\n      const result = PaginationSchema.parse({})\r\n      expect(result.page).toBe(1)\r\n      expect(result.limit).toBe(10)\r\n    })\r\n\r\n    it('should reject page less than 1', () => {\r\n      expect(() => PaginationSchema.parse({ page: 0, limit: 10 })).toThrow()\r\n    })\r\n\r\n    it('should reject limit greater than 50', () => {\r\n      expect(() => PaginationSchema.parse({ page: 1, limit: 100 })).toThrow()\r\n    })\r\n\r\n    it('should reject negative limit', () => {\r\n      expect(() => PaginationSchema.parse({ page: 1, limit: -5 })).toThrow()\r\n    })\r\n  })\r\n\r\n  describe('validatePagination', () => {\r\n    it('should validate URLSearchParams correctly', () => {\r\n      const searchParams = new URLSearchParams('page=2&limit=5')\r\n      const result = validatePagination(searchParams)\r\n      expect(result.page).toBe(2)\r\n      expect(result.limit).toBe(5)\r\n    })\r\n\r\n    it('should use defaults for missing parameters', () => {\r\n      const searchParams = new URLSearchParams('')\r\n      const result = validatePagination(searchParams)\r\n      expect(result.page).toBe(1)\r\n      expect(result.limit).toBe(10)\r\n    })\r\n\r\n    it('should handle invalid string values', () => {\r\n      const searchParams = new URLSearchParams('page=invalid&limit=abc')\r\n      // Should use defaults when parsing fails\r\n      const result = validatePagination(searchParams)\r\n      expect(result.page).toBe(1)\r\n      expect(result.limit).toBe(10)\r\n    })\r\n  })\r\n\r\n  describe('TaskIdSchema', () => {\r\n    it('should validate correct UUID', () => {\r\n      const validUuid = '550e8400-e29b-41d4-a716-446655440000'\r\n      expect(() => TaskIdSchema.parse({ id: validUuid })).not.toThrow()\r\n    })\r\n\r\n    it('should reject invalid UUID format', () => {\r\n      expect(() => TaskIdSchema.parse({ id: 'not-a-uuid' })).toThrow()\r\n    })\r\n\r\n    it('should reject empty string', () => {\r\n      expect(() => TaskIdSchema.parse({ id: '' })).toThrow()\r\n    })\r\n  })\r\n\r\n  describe('validateTaskId', () => {\r\n    it('should validate correct UUID string', () => {\r\n      const validUuid = '550e8400-e29b-41d4-a716-446655440000'\r\n      expect(() => validateTaskId(validUuid)).not.toThrow()\r\n    })\r\n\r\n    it('should reject invalid UUID string', () => {\r\n      expect(() => validateTaskId('not-a-uuid')).toThrow()\r\n    })\r\n  })\r\n})"],"version":3}