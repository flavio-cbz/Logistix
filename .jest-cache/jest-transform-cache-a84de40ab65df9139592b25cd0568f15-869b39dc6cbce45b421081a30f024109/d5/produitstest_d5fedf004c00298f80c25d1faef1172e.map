{"file":"F:\\Youcloud\\Documents\\Projets\\Logistix\\tests\\integration\\api\\produits.test.ts","mappings":"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","names":[],"sources":["F:\\Youcloud\\Documents\\Projets\\Logistix\\tests\\integration\\api\\produits.test.ts"],"sourcesContent":["/**\r\n * Products API Integration Tests\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { NextRequest } from 'next/server';\r\n\r\n// Mock the database and services\r\nvi.mock('@/lib/services/database/db', () => ({\r\n  db: {\r\n    prepare: vi.fn(() => ({\r\n      get: vi.fn(),\r\n      all: vi.fn(),\r\n      run: vi.fn()\r\n    }))\r\n  }\r\n}));\r\n\r\nvi.mock('jsonwebtoken', () => ({\r\n  verify: vi.fn(() => ({ userId: 'user-123', email: 'test@example.com' }))\r\n}));\r\n\r\n// Import API handlers after mocks\r\nimport { GET as getProduitsHandler, POST as createProduitHandler } from '@/app/api/v1/produits/route';\r\n\r\ndescribe('Products API Integration Tests', () => {\r\n  beforeEach(() => {\r\n    vi.clearAllMocks();\r\n  });\r\n\r\n  describe('GET /api/v1/produits', () => {\r\n    it('should return all products for authenticated user', async () => {\r\n      const mockProducts = [\r\n        {\r\n          id: 'prod-1',\r\n          nom: 'Tomates',\r\n          prix: 2.50,\r\n          quantite: 100,\r\n          parcelleId: 'parcelle-1',\r\n          userId: 'user-123',\r\n          createdAt: '2024-01-01T00:00:00Z'\r\n        },\r\n        {\r\n          id: 'prod-2',\r\n          nom: 'Carottes',\r\n          prix: 1.80,\r\n          quantite: 50,\r\n          parcelleId: 'parcelle-2',\r\n          userId: 'user-123',\r\n          createdAt: '2024-01-02T00:00:00Z'\r\n        }\r\n      ];\r\n\r\n      const mockDb = await import('@/lib/services/database/db');\r\n      (mockDb.db.prepare as any).mockReturnValue({\r\n        all: vi.fn().mockReturnValue(mockProducts)\r\n      });\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/v1/produits', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': 'Bearer mock-jwt-token'\r\n        }\r\n      });\r\n\r\n      const response = await getProduitsHandler(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(200);\r\n      expect(data.success).toBe(true);\r\n      expect(data.data.produits).toHaveLength(2);\r\n      expect(data.data.produits[0].nom).toBe('Tomates');\r\n      expect(data.data.produits[1].nom).toBe('Carottes');\r\n    });\r\n\r\n    it('should return empty array when no products exist', async () => {\r\n      const mockDb = await import('@/lib/services/database/db');\r\n      (mockDb.db.prepare as any).mockReturnValue({\r\n        all: vi.fn().mockReturnValue([])\r\n      });\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/v1/produits', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': 'Bearer mock-jwt-token'\r\n        }\r\n      });\r\n\r\n      const response = await getProduitsHandler(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(200);\r\n      expect(data.success).toBe(true);\r\n      expect(data.data.produits).toHaveLength(0);\r\n    });\r\n\r\n    it('should filter products by parcelle', async () => {\r\n      const mockProducts = [\r\n        {\r\n          id: 'prod-1',\r\n          nom: 'Tomates',\r\n          prix: 2.50,\r\n          quantite: 100,\r\n          parcelleId: 'parcelle-1',\r\n          userId: 'user-123'\r\n        }\r\n      ];\r\n\r\n      const mockDb = await import('@/lib/services/database/db');\r\n      (mockDb.db.prepare as any).mockReturnValue({\r\n        all: vi.fn().mockReturnValue(mockProducts)\r\n      });\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/v1/produits?parcelleId=parcelle-1', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': 'Bearer mock-jwt-token'\r\n        }\r\n      });\r\n\r\n      const response = await getProduitsHandler(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(200);\r\n      expect(data.success).toBe(true);\r\n      expect(data.data.produits).toHaveLength(1);\r\n      expect(data.data.produits[0].parcelleId).toBe('parcelle-1');\r\n    });\r\n\r\n    it('should support pagination', async () => {\r\n      const mockProducts = Array.from({ length: 5 }, (_, i) => ({\r\n        id: `prod-${i + 1}`,\r\n        nom: `Produit ${i + 1}`,\r\n        prix: 10 + i,\r\n        quantite: 100,\r\n        parcelleId: 'parcelle-1',\r\n        userId: 'user-123'\r\n      }));\r\n\r\n      const mockDb = await import('@/lib/services/database/db');\r\n      (mockDb.db.prepare as any).mockReturnValue({\r\n        all: vi.fn().mockReturnValue(mockProducts.slice(0, 2)) // First 2 items\r\n      });\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/v1/produits?page=1&limit=2', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': 'Bearer mock-jwt-token'\r\n        }\r\n      });\r\n\r\n      const response = await getProduitsHandler(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(200);\r\n      expect(data.success).toBe(true);\r\n      expect(data.data.produits).toHaveLength(2);\r\n      expect(data.data.pagination).toBeDefined();\r\n    });\r\n\r\n    it('should require authentication', async () => {\r\n      const request = new NextRequest('http://localhost:3000/api/v1/produits', {\r\n        method: 'GET'\r\n      });\r\n\r\n      const response = await getProduitsHandler(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(401);\r\n      expect(data.success).toBe(false);\r\n      expect(data.error.code).toBe('UNAUTHORIZED');\r\n    });\r\n\r\n    it('should handle database errors', async () => {\r\n      const mockDb = await import('@/lib/services/database/db');\r\n      (mockDb.db.prepare as any).mockReturnValue({\r\n        all: vi.fn().mockImplementation(() => {\r\n          throw new Error('Database connection failed');\r\n        })\r\n      });\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/v1/produits', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': 'Bearer mock-jwt-token'\r\n        }\r\n      });\r\n\r\n      const response = await getProduitsHandler(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(500);\r\n      expect(data.success).toBe(false);\r\n      expect(data.error.code).toBe('INTERNAL_ERROR');\r\n    });\r\n  });\r\n\r\n  describe('POST /api/v1/produits', () => {\r\n    it('should create new product with valid data', async () => {\r\n      const mockDb = await import('@/lib/services/database/db');\r\n      (mockDb.db.prepare as any).mockReturnValue({\r\n        run: vi.fn().mockReturnValue({ lastInsertRowid: 1 }),\r\n        get: vi.fn().mockReturnValue({\r\n          id: 'prod-1',\r\n          nom: 'Nouvelles Tomates',\r\n          prix: 3.00,\r\n          quantite: 200,\r\n          parcelleId: 'parcelle-1',\r\n          userId: 'user-123',\r\n          createdAt: '2024-01-01T00:00:00Z'\r\n        })\r\n      });\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/v1/produits', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          nom: 'Nouvelles Tomates',\r\n          prix: 3.00,\r\n          quantite: 200,\r\n          parcelleId: 'parcelle-1',\r\n          description: 'Tomates fraîches du jardin'\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer mock-jwt-token'\r\n        }\r\n      });\r\n\r\n      const response = await createProduitHandler(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(201);\r\n      expect(data.success).toBe(true);\r\n      expect(data.data.produit.nom).toBe('Nouvelles Tomates');\r\n      expect(data.data.produit.prix).toBe(3.00);\r\n      expect(data.data.produit.quantite).toBe(200);\r\n    });\r\n\r\n    it('should validate required fields', async () => {\r\n      const request = new NextRequest('http://localhost:3000/api/v1/produits', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          nom: '', // Empty name\r\n          prix: -1, // Negative price\r\n          quantite: 'invalid' // Invalid quantity type\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer mock-jwt-token'\r\n        }\r\n      });\r\n\r\n      const response = await createProduitHandler(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(400);\r\n      expect(data.success).toBe(false);\r\n      expect(data.error.code).toBe('VALIDATION_ERROR');\r\n      expect(data.error.details).toBeDefined();\r\n    });\r\n\r\n    it('should validate price is positive', async () => {\r\n      const request = new NextRequest('http://localhost:3000/api/v1/produits', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          nom: 'Test Product',\r\n          prix: -10,\r\n          quantite: 100,\r\n          parcelleId: 'parcelle-1'\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer mock-jwt-token'\r\n        }\r\n      });\r\n\r\n      const response = await createProduitHandler(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(400);\r\n      expect(data.success).toBe(false);\r\n      expect(data.error.code).toBe('VALIDATION_ERROR');\r\n    });\r\n\r\n    it('should validate quantity is non-negative', async () => {\r\n      const request = new NextRequest('http://localhost:3000/api/v1/produits', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          nom: 'Test Product',\r\n          prix: 10,\r\n          quantite: -5,\r\n          parcelleId: 'parcelle-1'\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer mock-jwt-token'\r\n        }\r\n      });\r\n\r\n      const response = await createProduitHandler(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(400);\r\n      expect(data.success).toBe(false);\r\n      expect(data.error.code).toBe('VALIDATION_ERROR');\r\n    });\r\n\r\n    it('should require authentication', async () => {\r\n      const request = new NextRequest('http://localhost:3000/api/v1/produits', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          nom: 'Test Product',\r\n          prix: 10,\r\n          quantite: 100,\r\n          parcelleId: 'parcelle-1'\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      const response = await createProduitHandler(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(401);\r\n      expect(data.success).toBe(false);\r\n      expect(data.error.code).toBe('UNAUTHORIZED');\r\n    });\r\n\r\n    it('should handle database insertion errors', async () => {\r\n      const mockDb = await import('@/lib/services/database/db');\r\n      (mockDb.db.prepare as any).mockReturnValue({\r\n        run: vi.fn().mockImplementation(() => {\r\n          throw new Error('Database insertion failed');\r\n        })\r\n      });\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/v1/produits', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          nom: 'Test Product',\r\n          prix: 10,\r\n          quantite: 100,\r\n          parcelleId: 'parcelle-1'\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer mock-jwt-token'\r\n        }\r\n      });\r\n\r\n      const response = await createProduitHandler(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(500);\r\n      expect(data.success).toBe(false);\r\n      expect(data.error.code).toBe('INTERNAL_ERROR');\r\n    });\r\n\r\n    it('should handle foreign key constraint violations', async () => {\r\n      const mockDb = await import('@/lib/services/database/db');\r\n      (mockDb.db.prepare as any).mockReturnValue({\r\n        run: vi.fn().mockImplementation(() => {\r\n          const error = new Error('FOREIGN KEY constraint failed');\r\n          (error as any).code = 'SQLITE_CONSTRAINT_FOREIGNKEY';\r\n          throw error;\r\n        })\r\n      });\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/v1/produits', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          nom: 'Test Product',\r\n          prix: 10,\r\n          quantite: 100,\r\n          parcelleId: 'non-existent-parcelle'\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer mock-jwt-token'\r\n        }\r\n      });\r\n\r\n      const response = await createProduitHandler(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(400);\r\n      expect(data.success).toBe(false);\r\n      expect(data.error.code).toBe('INVALID_REFERENCE');\r\n    });\r\n  });\r\n\r\n  describe('Product Search and Filtering', () => {\r\n    it('should search products by name', async () => {\r\n      const mockProducts = [\r\n        {\r\n          id: 'prod-1',\r\n          nom: 'Tomates cerises',\r\n          prix: 3.50,\r\n          quantite: 50,\r\n          parcelleId: 'parcelle-1',\r\n          userId: 'user-123'\r\n        }\r\n      ];\r\n\r\n      const mockDb = await import('@/lib/services/database/db');\r\n      (mockDb.db.prepare as any).mockReturnValue({\r\n        all: vi.fn().mockReturnValue(mockProducts)\r\n      });\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/v1/produits?search=tomates', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': 'Bearer mock-jwt-token'\r\n        }\r\n      });\r\n\r\n      const response = await getProduitsHandler(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(200);\r\n      expect(data.success).toBe(true);\r\n      expect(data.data.produits).toHaveLength(1);\r\n      expect(data.data.produits[0].nom).toContain('Tomates');\r\n    });\r\n\r\n    it('should filter products by price range', async () => {\r\n      const mockProducts = [\r\n        {\r\n          id: 'prod-1',\r\n          nom: 'Produit cher',\r\n          prix: 15.00,\r\n          quantite: 10,\r\n          parcelleId: 'parcelle-1',\r\n          userId: 'user-123'\r\n        }\r\n      ];\r\n\r\n      const mockDb = await import('@/lib/services/database/db');\r\n      (mockDb.db.prepare as any).mockReturnValue({\r\n        all: vi.fn().mockReturnValue(mockProducts)\r\n      });\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/v1/produits?minPrice=10&maxPrice=20', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': 'Bearer mock-jwt-token'\r\n        }\r\n      });\r\n\r\n      const response = await getProduitsHandler(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(200);\r\n      expect(data.success).toBe(true);\r\n      expect(data.data.produits).toHaveLength(1);\r\n      expect(data.data.produits[0].prix).toBeGreaterThanOrEqual(10);\r\n      expect(data.data.produits[0].prix).toBeLessThanOrEqual(20);\r\n    });\r\n\r\n    it('should sort products by different fields', async () => {\r\n      const mockProducts = [\r\n        {\r\n          id: 'prod-1',\r\n          nom: 'A Product',\r\n          prix: 5.00,\r\n          quantite: 100,\r\n          parcelleId: 'parcelle-1',\r\n          userId: 'user-123',\r\n          createdAt: '2024-01-01T00:00:00Z'\r\n        },\r\n        {\r\n          id: 'prod-2',\r\n          nom: 'B Product',\r\n          prix: 3.00,\r\n          quantite: 200,\r\n          parcelleId: 'parcelle-1',\r\n          userId: 'user-123',\r\n          createdAt: '2024-01-02T00:00:00Z'\r\n        }\r\n      ];\r\n\r\n      const mockDb = await import('@/lib/services/database/db');\r\n      (mockDb.db.prepare as any).mockReturnValue({\r\n        all: vi.fn().mockReturnValue(mockProducts)\r\n      });\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/v1/produits?sortBy=prix&sortOrder=asc', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': 'Bearer mock-jwt-token'\r\n        }\r\n      });\r\n\r\n      const response = await getProduitsHandler(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(200);\r\n      expect(data.success).toBe(true);\r\n      expect(data.data.produits).toHaveLength(2);\r\n      // Should be sorted by price ascending\r\n      expect(data.data.produits[0].prix).toBeLessThanOrEqual(data.data.produits[1].prix);\r\n    });\r\n  });\r\n\r\n  describe('Product Statistics', () => {\r\n    it('should return product statistics', async () => {\r\n      const mockStats = {\r\n        totalProducts: 10,\r\n        totalValue: 1500.00,\r\n        averagePrice: 15.00,\r\n        lowStockProducts: 2\r\n      };\r\n\r\n      const mockDb = await import('@/lib/services/database/db');\r\n      (mockDb.db.prepare as any).mockReturnValue({\r\n        get: vi.fn().mockReturnValue(mockStats)\r\n      });\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/v1/produits/stats', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': 'Bearer mock-jwt-token'\r\n        }\r\n      });\r\n\r\n      // This would require implementing the stats endpoint\r\n      // For now, we'll test that the main endpoint works\r\n      const response = await getProduitsHandler(request);\r\n      expect(response).toBeDefined();\r\n    });\r\n  });\r\n\r\n  describe('Error Handling and Edge Cases', () => {\r\n    it('should handle malformed JSON in request body', async () => {\r\n      const request = new NextRequest('http://localhost:3000/api/v1/produits', {\r\n        method: 'POST',\r\n        body: 'invalid json',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer mock-jwt-token'\r\n        }\r\n      });\r\n\r\n      const response = await createProduitHandler(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(400);\r\n      expect(data.success).toBe(false);\r\n      expect(data.error.code).toBe('INVALID_JSON');\r\n    });\r\n\r\n    it('should handle very large product names', async () => {\r\n      const longName = 'A'.repeat(1000);\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/v1/produits', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          nom: longName,\r\n          prix: 10,\r\n          quantite: 100,\r\n          parcelleId: 'parcelle-1'\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer mock-jwt-token'\r\n        }\r\n      });\r\n\r\n      const response = await createProduitHandler(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(400);\r\n      expect(data.success).toBe(false);\r\n      expect(data.error.code).toBe('VALIDATION_ERROR');\r\n    });\r\n\r\n    it('should handle concurrent product creation', async () => {\r\n      const mockDb = await import('@/lib/services/database/db');\r\n      (mockDb.db.prepare as any).mockReturnValue({\r\n        run: vi.fn().mockReturnValue({ lastInsertRowid: 1 }),\r\n        get: vi.fn().mockReturnValue({\r\n          id: 'prod-1',\r\n          nom: 'Concurrent Product',\r\n          prix: 10,\r\n          quantite: 100,\r\n          parcelleId: 'parcelle-1',\r\n          userId: 'user-123'\r\n        })\r\n      });\r\n\r\n      const requests = Array.from({ length: 3 }, (_, i) => \r\n        new NextRequest('http://localhost:3000/api/v1/produits', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            nom: `Concurrent Product ${i}`,\r\n            prix: 10,\r\n            quantite: 100,\r\n            parcelleId: 'parcelle-1'\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer mock-jwt-token'\r\n          }\r\n        })\r\n      );\r\n\r\n      const responses = await Promise.all(\r\n        requests.map(request => createProduitHandler(request))\r\n      );\r\n\r\n      responses.forEach(response => {\r\n        expect(response.status).toBeOneOf([201, 500]); // Either success or handled error\r\n      });\r\n    });\r\n  });\r\n});"],"version":3}