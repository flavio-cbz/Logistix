{"file":"F:\\Youcloud\\Documents\\Projets\\Logistix\\lib\\utils\\validation\\__tests__\\validation.test.ts","mappings":"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","names":[],"sources":["F:\\Youcloud\\Documents\\Projets\\Logistix\\lib\\utils\\validation\\__tests__\\validation.test.ts"],"sourcesContent":["/**\r\n * Validation Utilities Tests\r\n */\r\n\r\nimport { describe, it, expect } from 'vitest';\r\nimport { z } from 'zod';\r\n\r\n// Mock validation schemas (since we don't have the actual file yet)\r\nconst mockValidationSchemas = {\r\n  // User validation\r\n  userSchema: z.object({\r\n    id: z.string().uuid(),\r\n    email: z.string().email(),\r\n    name: z.string().min(1).max(100),\r\n    age: z.number().min(0).max(150).optional(),\r\n    createdAt: z.date().optional()\r\n  }),\r\n\r\n  // Product validation\r\n  productSchema: z.object({\r\n    id: z.string().uuid(),\r\n    name: z.string().min(1).max(200),\r\n    price: z.number().positive(),\r\n    category: z.string().min(1),\r\n    description: z.string().optional(),\r\n    inStock: z.boolean().default(true)\r\n  }),\r\n\r\n  // Parcel validation\r\n  parcelSchema: z.object({\r\n    id: z.string().uuid(),\r\n    name: z.string().min(1).max(100),\r\n    location: z.string().min(1),\r\n    size: z.number().positive(),\r\n    type: z.enum(['agricultural', 'residential', 'commercial']),\r\n    coordinates: z.object({\r\n      lat: z.number().min(-90).max(90),\r\n      lng: z.number().min(-180).max(180)\r\n    }).optional()\r\n  }),\r\n\r\n  // Market analysis validation\r\n  marketAnalysisSchema: z.object({\r\n    id: z.string().uuid(),\r\n    productId: z.string().uuid(),\r\n    platform: z.enum(['vinted', 'leboncoin', 'facebook']),\r\n    query: z.string().min(1),\r\n    filters: z.object({\r\n      priceMin: z.number().min(0).optional(),\r\n      priceMax: z.number().min(0).optional(),\r\n      condition: z.enum(['new', 'very_good', 'good', 'satisfactory']).optional(),\r\n      brand: z.string().optional()\r\n    }).optional(),\r\n    results: z.array(z.object({\r\n      title: z.string(),\r\n      price: z.number(),\r\n      condition: z.string(),\r\n      url: z.string().url(),\r\n      imageUrl: z.string().url().optional()\r\n    })).optional()\r\n  }),\r\n\r\n  // API response validation\r\n  apiResponseSchema: z.object({\r\n    success: z.boolean(),\r\n    data: z.any().optional(),\r\n    error: z.object({\r\n      code: z.string(),\r\n      message: z.string(),\r\n      details: z.any().optional()\r\n    }).optional(),\r\n    meta: z.object({\r\n      timestamp: z.string().datetime(),\r\n      requestId: z.string().uuid(),\r\n      version: z.string()\r\n    }).optional()\r\n  })\r\n};\r\n\r\ndescribe('Validation Schemas', () => {\r\n  describe('userSchema', () => {\r\n    it('should validate valid user data', () => {\r\n      const validUser = {\r\n        id: '123e4567-e89b-12d3-a456-426614174000',\r\n        email: 'test@example.com',\r\n        name: 'John Doe',\r\n        age: 30\r\n      };\r\n\r\n      const result = mockValidationSchemas.userSchema.safeParse(validUser);\r\n      expect(result.success).toBe(true);\r\n      if (result.success) {\r\n        expect(result.data).toEqual(validUser);\r\n      }\r\n    });\r\n\r\n    it('should reject invalid email', () => {\r\n      const invalidUser = {\r\n        id: '123e4567-e89b-12d3-a456-426614174000',\r\n        email: 'invalid-email',\r\n        name: 'John Doe'\r\n      };\r\n\r\n      const result = mockValidationSchemas.userSchema.safeParse(invalidUser);\r\n      expect(result.success).toBe(false);\r\n      if (!result.success) {\r\n        expect(result.error.issues).toHaveLength(1);\r\n        expect(result.error.issues[0].path).toEqual(['email']);\r\n      }\r\n    });\r\n\r\n    it('should reject invalid UUID', () => {\r\n      const invalidUser = {\r\n        id: 'not-a-uuid',\r\n        email: 'test@example.com',\r\n        name: 'John Doe'\r\n      };\r\n\r\n      const result = mockValidationSchemas.userSchema.safeParse(invalidUser);\r\n      expect(result.success).toBe(false);\r\n    });\r\n\r\n    it('should reject empty name', () => {\r\n      const invalidUser = {\r\n        id: '123e4567-e89b-12d3-a456-426614174000',\r\n        email: 'test@example.com',\r\n        name: ''\r\n      };\r\n\r\n      const result = mockValidationSchemas.userSchema.safeParse(invalidUser);\r\n      expect(result.success).toBe(false);\r\n    });\r\n\r\n    it('should reject negative age', () => {\r\n      const invalidUser = {\r\n        id: '123e4567-e89b-12d3-a456-426614174000',\r\n        email: 'test@example.com',\r\n        name: 'John Doe',\r\n        age: -5\r\n      };\r\n\r\n      const result = mockValidationSchemas.userSchema.safeParse(invalidUser);\r\n      expect(result.success).toBe(false);\r\n    });\r\n\r\n    it('should accept optional fields', () => {\r\n      const minimalUser = {\r\n        id: '123e4567-e89b-12d3-a456-426614174000',\r\n        email: 'test@example.com',\r\n        name: 'John Doe'\r\n      };\r\n\r\n      const result = mockValidationSchemas.userSchema.safeParse(minimalUser);\r\n      expect(result.success).toBe(true);\r\n    });\r\n  });\r\n\r\n  describe('productSchema', () => {\r\n    it('should validate valid product data', () => {\r\n      const validProduct = {\r\n        id: '123e4567-e89b-12d3-a456-426614174000',\r\n        name: 'Test Product',\r\n        price: 29.99,\r\n        category: 'Electronics',\r\n        description: 'A great product',\r\n        inStock: true\r\n      };\r\n\r\n      const result = mockValidationSchemas.productSchema.safeParse(validProduct);\r\n      expect(result.success).toBe(true);\r\n    });\r\n\r\n    it('should reject negative price', () => {\r\n      const invalidProduct = {\r\n        id: '123e4567-e89b-12d3-a456-426614174000',\r\n        name: 'Test Product',\r\n        price: -10,\r\n        category: 'Electronics'\r\n      };\r\n\r\n      const result = mockValidationSchemas.productSchema.safeParse(invalidProduct);\r\n      expect(result.success).toBe(false);\r\n    });\r\n\r\n    it('should reject zero price', () => {\r\n      const invalidProduct = {\r\n        id: '123e4567-e89b-12d3-a456-426614174000',\r\n        name: 'Test Product',\r\n        price: 0,\r\n        category: 'Electronics'\r\n      };\r\n\r\n      const result = mockValidationSchemas.productSchema.safeParse(invalidProduct);\r\n      expect(result.success).toBe(false);\r\n    });\r\n\r\n    it('should use default value for inStock', () => {\r\n      const product = {\r\n        id: '123e4567-e89b-12d3-a456-426614174000',\r\n        name: 'Test Product',\r\n        price: 29.99,\r\n        category: 'Electronics'\r\n      };\r\n\r\n      const result = mockValidationSchemas.productSchema.safeParse(product);\r\n      expect(result.success).toBe(true);\r\n      if (result.success) {\r\n        expect(result.data.inStock).toBe(true);\r\n      }\r\n    });\r\n  });\r\n\r\n  describe('parcelSchema', () => {\r\n    it('should validate valid parcel data', () => {\r\n      const validParcel = {\r\n        id: '123e4567-e89b-12d3-a456-426614174000',\r\n        name: 'Farm Plot A',\r\n        location: 'Rural Area, County',\r\n        size: 1000.5,\r\n        type: 'agricultural' as const,\r\n        coordinates: {\r\n          lat: 45.5231,\r\n          lng: -122.6765\r\n        }\r\n      };\r\n\r\n      const result = mockValidationSchemas.parcelSchema.safeParse(validParcel);\r\n      expect(result.success).toBe(true);\r\n    });\r\n\r\n    it('should reject invalid parcel type', () => {\r\n      const invalidParcel = {\r\n        id: '123e4567-e89b-12d3-a456-426614174000',\r\n        name: 'Farm Plot A',\r\n        location: 'Rural Area, County',\r\n        size: 1000.5,\r\n        type: 'invalid-type'\r\n      };\r\n\r\n      const result = mockValidationSchemas.parcelSchema.safeParse(invalidParcel);\r\n      expect(result.success).toBe(false);\r\n    });\r\n\r\n    it('should reject invalid coordinates', () => {\r\n      const invalidParcel = {\r\n        id: '123e4567-e89b-12d3-a456-426614174000',\r\n        name: 'Farm Plot A',\r\n        location: 'Rural Area, County',\r\n        size: 1000.5,\r\n        type: 'agricultural' as const,\r\n        coordinates: {\r\n          lat: 95, // Invalid latitude\r\n          lng: -122.6765\r\n        }\r\n      };\r\n\r\n      const result = mockValidationSchemas.parcelSchema.safeParse(invalidParcel);\r\n      expect(result.success).toBe(false);\r\n    });\r\n\r\n    it('should accept parcel without coordinates', () => {\r\n      const parcel = {\r\n        id: '123e4567-e89b-12d3-a456-426614174000',\r\n        name: 'Farm Plot A',\r\n        location: 'Rural Area, County',\r\n        size: 1000.5,\r\n        type: 'agricultural' as const\r\n      };\r\n\r\n      const result = mockValidationSchemas.parcelSchema.safeParse(parcel);\r\n      expect(result.success).toBe(true);\r\n    });\r\n  });\r\n\r\n  describe('marketAnalysisSchema', () => {\r\n    it('should validate valid market analysis data', () => {\r\n      const validAnalysis = {\r\n        id: '123e4567-e89b-12d3-a456-426614174000',\r\n        productId: '456e7890-e89b-12d3-a456-426614174000',\r\n        platform: 'vinted' as const,\r\n        query: 'vintage jacket',\r\n        filters: {\r\n          priceMin: 10,\r\n          priceMax: 100,\r\n          condition: 'good' as const,\r\n          brand: 'Nike'\r\n        },\r\n        results: [\r\n          {\r\n            title: 'Vintage Nike Jacket',\r\n            price: 45.99,\r\n            condition: 'good',\r\n            url: 'https://example.com/item/1',\r\n            imageUrl: 'https://example.com/image/1.jpg'\r\n          }\r\n        ]\r\n      };\r\n\r\n      const result = mockValidationSchemas.marketAnalysisSchema.safeParse(validAnalysis);\r\n      expect(result.success).toBe(true);\r\n    });\r\n\r\n    it('should reject invalid platform', () => {\r\n      const invalidAnalysis = {\r\n        id: '123e4567-e89b-12d3-a456-426614174000',\r\n        productId: '456e7890-e89b-12d3-a456-426614174000',\r\n        platform: 'invalid-platform',\r\n        query: 'vintage jacket'\r\n      };\r\n\r\n      const result = mockValidationSchemas.marketAnalysisSchema.safeParse(invalidAnalysis);\r\n      expect(result.success).toBe(false);\r\n    });\r\n\r\n    it('should reject invalid URL in results', () => {\r\n      const invalidAnalysis = {\r\n        id: '123e4567-e89b-12d3-a456-426614174000',\r\n        productId: '456e7890-e89b-12d3-a456-426614174000',\r\n        platform: 'vinted' as const,\r\n        query: 'vintage jacket',\r\n        results: [\r\n          {\r\n            title: 'Vintage Nike Jacket',\r\n            price: 45.99,\r\n            condition: 'good',\r\n            url: 'not-a-valid-url'\r\n          }\r\n        ]\r\n      };\r\n\r\n      const result = mockValidationSchemas.marketAnalysisSchema.safeParse(invalidAnalysis);\r\n      expect(result.success).toBe(false);\r\n    });\r\n  });\r\n\r\n  describe('apiResponseSchema', () => {\r\n    it('should validate successful API response', () => {\r\n      const successResponse = {\r\n        success: true,\r\n        data: { id: 1, name: 'Test' },\r\n        meta: {\r\n          timestamp: '2024-01-01T12:00:00Z',\r\n          requestId: '123e4567-e89b-12d3-a456-426614174000',\r\n          version: '1.0.0'\r\n        }\r\n      };\r\n\r\n      const result = mockValidationSchemas.apiResponseSchema.safeParse(successResponse);\r\n      expect(result.success).toBe(true);\r\n    });\r\n\r\n    it('should validate error API response', () => {\r\n      const errorResponse = {\r\n        success: false,\r\n        error: {\r\n          code: 'VALIDATION_ERROR',\r\n          message: 'Invalid input data',\r\n          details: { field: 'email', reason: 'invalid format' }\r\n        }\r\n      };\r\n\r\n      const result = mockValidationSchemas.apiResponseSchema.safeParse(errorResponse);\r\n      expect(result.success).toBe(true);\r\n    });\r\n\r\n    it('should reject invalid datetime format', () => {\r\n      const invalidResponse = {\r\n        success: true,\r\n        meta: {\r\n          timestamp: 'invalid-datetime',\r\n          requestId: '123e4567-e89b-12d3-a456-426614174000',\r\n          version: '1.0.0'\r\n        }\r\n      };\r\n\r\n      const result = mockValidationSchemas.apiResponseSchema.safeParse(invalidResponse);\r\n      expect(result.success).toBe(false);\r\n    });\r\n  });\r\n});\r\n\r\ndescribe('Validation Utilities', () => {\r\n  describe('Custom validation functions', () => {\r\n    it('should validate email format', () => {\r\n      const emailSchema = z.string().email();\r\n      \r\n      expect(emailSchema.safeParse('test@example.com').success).toBe(true);\r\n      expect(emailSchema.safeParse('user+tag@domain.co.uk').success).toBe(true);\r\n      expect(emailSchema.safeParse('invalid-email').success).toBe(false);\r\n      expect(emailSchema.safeParse('').success).toBe(false);\r\n    });\r\n\r\n    it('should validate UUID format', () => {\r\n      const uuidSchema = z.string().uuid();\r\n      \r\n      expect(uuidSchema.safeParse('123e4567-e89b-12d3-a456-426614174000').success).toBe(true);\r\n      expect(uuidSchema.safeParse('not-a-uuid').success).toBe(false);\r\n      expect(uuidSchema.safeParse('').success).toBe(false);\r\n    });\r\n\r\n    it('should validate URL format', () => {\r\n      const urlSchema = z.string().url();\r\n      \r\n      expect(urlSchema.safeParse('https://example.com').success).toBe(true);\r\n      expect(urlSchema.safeParse('http://localhost:3000/api').success).toBe(true);\r\n      expect(urlSchema.safeParse('ftp://files.example.com').success).toBe(true);\r\n      expect(urlSchema.safeParse('not-a-url').success).toBe(false);\r\n      expect(urlSchema.safeParse('').success).toBe(false);\r\n    });\r\n\r\n    it('should validate datetime format', () => {\r\n      const datetimeSchema = z.string().datetime();\r\n      \r\n      expect(datetimeSchema.safeParse('2024-01-01T12:00:00Z').success).toBe(true);\r\n      expect(datetimeSchema.safeParse('2024-01-01T12:00:00.000Z').success).toBe(true);\r\n      expect(datetimeSchema.safeParse('2024-01-01T12:00:00+02:00').success).toBe(true);\r\n      expect(datetimeSchema.safeParse('2024-01-01 12:00:00').success).toBe(false);\r\n      expect(datetimeSchema.safeParse('invalid-datetime').success).toBe(false);\r\n    });\r\n  });\r\n\r\n  describe('Schema composition', () => {\r\n    it('should compose schemas correctly', () => {\r\n      const baseSchema = z.object({\r\n        id: z.string().uuid(),\r\n        createdAt: z.string().datetime()\r\n      });\r\n\r\n      const extendedSchema = baseSchema.extend({\r\n        name: z.string().min(1),\r\n        email: z.string().email()\r\n      });\r\n\r\n      const validData = {\r\n        id: '123e4567-e89b-12d3-a456-426614174000',\r\n        createdAt: '2024-01-01T12:00:00Z',\r\n        name: 'John Doe',\r\n        email: 'john@example.com'\r\n      };\r\n\r\n      expect(extendedSchema.safeParse(validData).success).toBe(true);\r\n    });\r\n\r\n    it('should handle optional fields in composition', () => {\r\n      const baseSchema = z.object({\r\n        id: z.string().uuid()\r\n      });\r\n\r\n      const extendedSchema = baseSchema.extend({\r\n        name: z.string().optional(),\r\n        email: z.string().email().optional()\r\n      });\r\n\r\n      const minimalData = {\r\n        id: '123e4567-e89b-12d3-a456-426614174000'\r\n      };\r\n\r\n      expect(extendedSchema.safeParse(minimalData).success).toBe(true);\r\n    });\r\n  });\r\n\r\n  describe('Error handling', () => {\r\n    it('should provide detailed error information', () => {\r\n      const schema = z.object({\r\n        email: z.string().email(),\r\n        age: z.number().min(0).max(150)\r\n      });\r\n\r\n      const invalidData = {\r\n        email: 'invalid-email',\r\n        age: -5\r\n      };\r\n\r\n      const result = schema.safeParse(invalidData);\r\n      expect(result.success).toBe(false);\r\n      \r\n      if (!result.success) {\r\n        expect(result.error.issues).toHaveLength(2);\r\n        expect(result.error.issues.some(issue => issue.path.includes('email'))).toBe(true);\r\n        expect(result.error.issues.some(issue => issue.path.includes('age'))).toBe(true);\r\n      }\r\n    });\r\n\r\n    it('should handle nested object validation errors', () => {\r\n      const schema = z.object({\r\n        user: z.object({\r\n          email: z.string().email(),\r\n          profile: z.object({\r\n            age: z.number().min(0)\r\n          })\r\n        })\r\n      });\r\n\r\n      const invalidData = {\r\n        user: {\r\n          email: 'invalid-email',\r\n          profile: {\r\n            age: -5\r\n          }\r\n        }\r\n      };\r\n\r\n      const result = schema.safeParse(invalidData);\r\n      expect(result.success).toBe(false);\r\n      \r\n      if (!result.success) {\r\n        expect(result.error.issues).toHaveLength(2);\r\n        expect(result.error.issues.some(issue => \r\n          issue.path.includes('user') && issue.path.includes('email')\r\n        )).toBe(true);\r\n        expect(result.error.issues.some(issue => \r\n          issue.path.includes('profile') && issue.path.includes('age')\r\n        )).toBe(true);\r\n      }\r\n    });\r\n  });\r\n});"],"version":3}