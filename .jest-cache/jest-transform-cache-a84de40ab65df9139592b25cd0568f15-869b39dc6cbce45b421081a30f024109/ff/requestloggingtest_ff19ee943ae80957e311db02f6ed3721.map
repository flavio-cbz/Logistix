{"file":"F:\\Youcloud\\Documents\\Projets\\Logistix\\lib\\middlewares\\__tests__\\request-logging.test.ts","mappings":"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","names":[],"sources":["F:\\Youcloud\\Documents\\Projets\\Logistix\\lib\\middlewares\\__tests__\\request-logging.test.ts"],"sourcesContent":["/**\r\n * Request Logging Middleware Tests\r\n */\r\n\r\nimport { describe, it, expect, vi, beforeEach, afterEach } from 'vitest';\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport {\r\n  withRequestLogging,\r\n  withDatabaseLogging,\r\n  withServiceLogging,\r\n  withPerformanceLogging\r\n} from '../request-logging';\r\n\r\n// Mock the logging utilities\r\nvi.mock('@/lib/utils/logging', () => ({\r\n  createRequestLogger: vi.fn(() => ({\r\n    http: vi.fn(),\r\n    info: vi.fn(),\r\n    error: vi.fn(),\r\n    debug: vi.fn(),\r\n    performance: vi.fn()\r\n  })),\r\n  apiRequestLogger: {\r\n    logResponse: vi.fn(),\r\n    logError: vi.fn()\r\n  }\r\n}));\r\n\r\n// Mock uuid\r\nvi.mock('uuid', () => ({\r\n  v4: vi.fn(() => 'test-request-id-123')\r\n}));\r\n\r\ndescribe('Request Logging Middleware', () => {\r\n  beforeEach(() => {\r\n    vi.clearAllMocks();\r\n    vi.useFakeTimers();\r\n  });\r\n\r\n  afterEach(() => {\r\n    vi.useRealTimers();\r\n  });\r\n\r\n  describe('withRequestLogging', () => {\r\n    it('should log successful requests', async () => {\r\n      const mockHandler = vi.fn(async (req: NextRequest) => {\r\n        return NextResponse.json({ success: true });\r\n      });\r\n\r\n      const wrappedHandler = withRequestLogging(mockHandler);\r\n      \r\n      const request = new NextRequest('http://localhost:3000/api/test', {\r\n        method: 'GET',\r\n        headers: {\r\n          'user-agent': 'test-agent',\r\n          'x-forwarded-for': '192.168.1.1'\r\n        }\r\n      });\r\n\r\n      vi.advanceTimersByTime(100);\r\n      \r\n      const response = await wrappedHandler(request);\r\n\r\n      expect(response).toBeDefined();\r\n      expect(response.headers.get('x-request-id')).toBe('test-request-id-123');\r\n      expect(mockHandler).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should log failed requests', async () => {\r\n      const mockHandler = vi.fn(async (req: NextRequest) => {\r\n        throw new Error('Handler error');\r\n      });\r\n\r\n      const wrappedHandler = withRequestLogging(mockHandler);\r\n      \r\n      const request = new NextRequest('http://localhost:3000/api/test', {\r\n        method: 'POST'\r\n      });\r\n\r\n      vi.advanceTimersByTime(200);\r\n\r\n      await expect(wrappedHandler(request)).rejects.toThrow('Handler error');\r\n    });\r\n\r\n    it('should handle requests without optional headers', async () => {\r\n      const mockHandler = vi.fn(async (req: NextRequest) => {\r\n        return NextResponse.json({ success: true });\r\n      });\r\n\r\n      const wrappedHandler = withRequestLogging(mockHandler);\r\n      \r\n      const request = new NextRequest('http://localhost:3000/api/test', {\r\n        method: 'GET'\r\n      });\r\n\r\n      const response = await wrappedHandler(request);\r\n\r\n      expect(response).toBeDefined();\r\n      expect(mockHandler).toHaveBeenCalled();\r\n    });\r\n  });\r\n\r\n  describe('withDatabaseLogging', () => {\r\n    it('should log successful database operations', async () => {\r\n      const mockOperation = vi.fn(async (param1: string, param2: number) => {\r\n        return { id: 1, name: param1, count: param2 };\r\n      });\r\n\r\n      const wrappedOperation = withDatabaseLogging('GET_USER', mockOperation);\r\n\r\n      vi.advanceTimersByTime(150);\r\n\r\n      const result = await wrappedOperation('test-user', 42);\r\n\r\n      expect(result).toEqual({ id: 1, name: 'test-user', count: 42 });\r\n      expect(mockOperation).toHaveBeenCalledWith('test-user', 42);\r\n    });\r\n\r\n    it('should log failed database operations', async () => {\r\n      const mockOperation = vi.fn(async () => {\r\n        throw new Error('Database connection failed');\r\n      });\r\n\r\n      const wrappedOperation = withDatabaseLogging('CREATE_USER', mockOperation);\r\n\r\n      vi.advanceTimersByTime(300);\r\n\r\n      await expect(wrappedOperation()).rejects.toThrow('Database connection failed');\r\n    });\r\n  });\r\n\r\n  describe('withServiceLogging', () => {\r\n    it('should log successful service operations', async () => {\r\n      const mockService = vi.fn(async (data: any) => {\r\n        return { processed: true, data };\r\n      });\r\n\r\n      const wrappedService = withServiceLogging('UserService', 'processUser', mockService);\r\n\r\n      vi.advanceTimersByTime(250);\r\n\r\n      const result = await wrappedService({ name: 'John' });\r\n\r\n      expect(result).toEqual({ processed: true, data: { name: 'John' } });\r\n      expect(mockService).toHaveBeenCalledWith({ name: 'John' });\r\n    });\r\n\r\n    it('should log failed service operations', async () => {\r\n      const mockService = vi.fn(async () => {\r\n        throw new Error('Service unavailable');\r\n      });\r\n\r\n      const wrappedService = withServiceLogging('EmailService', 'sendEmail', mockService);\r\n\r\n      vi.advanceTimersByTime(100);\r\n\r\n      await expect(wrappedService()).rejects.toThrow('Service unavailable');\r\n    });\r\n  });\r\n\r\n  describe('withPerformanceLogging', () => {\r\n    it('should log slow operations', async () => {\r\n      const slowOperation = vi.fn(async () => {\r\n        return 'completed';\r\n      });\r\n\r\n      const wrappedOperation = withPerformanceLogging('SLOW_OPERATION', slowOperation, 500);\r\n\r\n      vi.advanceTimersByTime(1000); // Exceed threshold\r\n\r\n      const result = await wrappedOperation();\r\n\r\n      expect(result).toBe('completed');\r\n      expect(slowOperation).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should log fast operations without warnings', async () => {\r\n      const fastOperation = vi.fn(async () => {\r\n        return 'completed';\r\n      });\r\n\r\n      const wrappedOperation = withPerformanceLogging('FAST_OPERATION', fastOperation, 1000);\r\n\r\n      vi.advanceTimersByTime(100); // Under threshold\r\n\r\n      const result = await wrappedOperation();\r\n\r\n      expect(result).toBe('completed');\r\n      expect(fastOperation).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should handle synchronous functions', async () => {\r\n      const syncOperation = vi.fn(() => {\r\n        return 'sync result';\r\n      });\r\n\r\n      const wrappedOperation = withPerformanceLogging('SYNC_OPERATION', syncOperation);\r\n\r\n      vi.advanceTimersByTime(50);\r\n\r\n      const result = await wrappedOperation();\r\n\r\n      expect(result).toBe('sync result');\r\n      expect(syncOperation).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should log failed operations', async () => {\r\n      const failingOperation = vi.fn(async () => {\r\n        throw new Error('Operation failed');\r\n      });\r\n\r\n      const wrappedOperation = withPerformanceLogging('FAILING_OPERATION', failingOperation);\r\n\r\n      vi.advanceTimersByTime(200);\r\n\r\n      await expect(wrappedOperation()).rejects.toThrow('Operation failed');\r\n    });\r\n  });\r\n\r\n  describe('Header sanitization', () => {\r\n    it('should sanitize sensitive headers in logs', async () => {\r\n      const mockHandler = vi.fn(async (req: NextRequest) => {\r\n        return NextResponse.json({ success: true });\r\n      });\r\n\r\n      const wrappedHandler = withRequestLogging(mockHandler);\r\n      \r\n      const request = new NextRequest('http://localhost:3000/api/test', {\r\n        method: 'POST',\r\n        headers: {\r\n          'authorization': 'Bearer secret-token',\r\n          'cookie': 'session=secret-session',\r\n          'x-api-key': 'secret-api-key',\r\n          'content-type': 'application/json'\r\n        }\r\n      });\r\n\r\n      const response = await wrappedHandler(request);\r\n\r\n      expect(response).toBeDefined();\r\n      expect(mockHandler).toHaveBeenCalled();\r\n      \r\n      // Verify that the request was processed with sanitized headers\r\n      const processedRequest = mockHandler.mock.calls[0][0];\r\n      expect(processedRequest.headers.get('x-request-id')).toBe('test-request-id-123');\r\n    });\r\n  });\r\n\r\n  describe('Response size calculation', () => {\r\n    it('should handle responses with content-length header', async () => {\r\n      const mockHandler = vi.fn(async (req: NextRequest) => {\r\n        const response = NextResponse.json({ data: 'test' });\r\n        response.headers.set('content-length', '1024');\r\n        return response;\r\n      });\r\n\r\n      const wrappedHandler = withRequestLogging(mockHandler);\r\n      \r\n      const request = new NextRequest('http://localhost:3000/api/test');\r\n\r\n      const response = await wrappedHandler(request);\r\n\r\n      expect(response).toBeDefined();\r\n      expect(response.headers.get('content-length')).toBe('1024');\r\n    });\r\n\r\n    it('should handle responses without content-length header', async () => {\r\n      const mockHandler = vi.fn(async (req: NextRequest) => {\r\n        return NextResponse.json({ data: 'test' });\r\n      });\r\n\r\n      const wrappedHandler = withRequestLogging(mockHandler);\r\n      \r\n      const request = new NextRequest('http://localhost:3000/api/test');\r\n\r\n      const response = await wrappedHandler(request);\r\n\r\n      expect(response).toBeDefined();\r\n    });\r\n  });\r\n});"],"version":3}