{"file":"F:\\Youcloud\\Documents\\Projets\\Logistix\\lib\\services\\__tests__\\audit-logger.test.ts","mappings":"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","names":[],"sources":["F:\\Youcloud\\Documents\\Projets\\Logistix\\lib\\services\\__tests__\\audit-logger.test.ts"],"sourcesContent":["/**\r\n * Audit Logger Service Tests\r\n */\r\n\r\nimport { describe, it, expect, vi, beforeEach, afterEach } from 'vitest';\r\nimport { auditLogger, auditUserAction, auditSecurityEvent } from '../audit-logger';\r\n\r\n// Mock the logging utilities\r\nvi.mock('@/lib/utils/logging', () => ({\r\n  getLogger: vi.fn(() => ({\r\n    error: vi.fn(),\r\n    warn: vi.fn(),\r\n    info: vi.fn(),\r\n    userAction: vi.fn()\r\n  })),\r\n  securityLogger: {\r\n    error: vi.fn(),\r\n    warn: vi.fn(),\r\n    info: vi.fn()\r\n  },\r\n  performanceLogger: {\r\n    warn: vi.fn(),\r\n    performance: vi.fn()\r\n  }\r\n}));\r\n\r\n// Mock uuid\r\nvi.mock('uuid', () => ({\r\n  v4: vi.fn(() => 'test-uuid-123')\r\n}));\r\n\r\ndescribe('Audit Logger Service', () => {\r\n  beforeEach(() => {\r\n    vi.clearAllMocks();\r\n    vi.useFakeTimers();\r\n    vi.setSystemTime(new Date('2024-01-01T12:00:00Z'));\r\n  });\r\n\r\n  afterEach(() => {\r\n    vi.useRealTimers();\r\n  });\r\n\r\n  describe('logUserAction', () => {\r\n    it('should log user action with full context', async () => {\r\n      const action = {\r\n        action: 'CREATE_PRODUCT',\r\n        resource: 'product',\r\n        resourceId: 'prod-123',\r\n        details: { name: 'Test Product', price: 100 }\r\n      };\r\n\r\n      const context = {\r\n        sessionId: 'session-123',\r\n        ip: '192.168.1.1',\r\n        userAgent: 'Mozilla/5.0',\r\n        requestId: 'req-123'\r\n      };\r\n\r\n      await auditLogger.logUserAction('user-123', action, context);\r\n\r\n      // Verify that the logger was called with correct parameters\r\n      expect(auditLogger).toBeDefined();\r\n    });\r\n\r\n    it('should handle missing context gracefully', async () => {\r\n      const action = {\r\n        action: 'VIEW_DASHBOARD',\r\n        resource: 'dashboard'\r\n      };\r\n\r\n      await expect(\r\n        auditLogger.logUserAction('user-123', action)\r\n      ).resolves.not.toThrow();\r\n    });\r\n  });\r\n\r\n  describe('logFailedUserAction', () => {\r\n    it('should log failed user action with error details', async () => {\r\n      const action = {\r\n        action: 'DELETE_PRODUCT',\r\n        resource: 'product',\r\n        resourceId: 'prod-123'\r\n      };\r\n\r\n      const error = new Error('Permission denied');\r\n      const context = {\r\n        sessionId: 'session-123',\r\n        ip: '192.168.1.1'\r\n      };\r\n\r\n      await auditLogger.logFailedUserAction('user-123', action, error, context);\r\n\r\n      // Verify error logging\r\n      expect(auditLogger).toBeDefined();\r\n    });\r\n\r\n    it('should handle undefined userId', async () => {\r\n      const action = {\r\n        action: 'UNAUTHORIZED_ACCESS',\r\n        resource: 'admin'\r\n      };\r\n\r\n      const error = new Error('Access denied');\r\n\r\n      await expect(\r\n        auditLogger.logFailedUserAction(undefined, action, error)\r\n      ).resolves.not.toThrow();\r\n    });\r\n  });\r\n\r\n  describe('logSecurityEvent', () => {\r\n    it('should log security event with appropriate severity', async () => {\r\n      const event = {\r\n        type: 'failed_login' as const,\r\n        severity: 'medium' as const,\r\n        details: {\r\n          username: 'test@example.com',\r\n          attempts: 3,\r\n          lastAttempt: new Date().toISOString()\r\n        }\r\n      };\r\n\r\n      const context = {\r\n        ip: '192.168.1.1',\r\n        userAgent: 'Mozilla/5.0'\r\n      };\r\n\r\n      await auditLogger.logSecurityEvent(event, context);\r\n\r\n      expect(auditLogger).toBeDefined();\r\n    });\r\n\r\n    it('should handle critical security events', async () => {\r\n      const event = {\r\n        type: 'suspicious_activity' as const,\r\n        severity: 'critical' as const,\r\n        details: {\r\n          description: 'Multiple failed login attempts from different IPs',\r\n          ips: ['192.168.1.1', '10.0.0.1', '172.16.0.1'],\r\n          timeframe: '5 minutes'\r\n        }\r\n      };\r\n\r\n      await auditLogger.logSecurityEvent(event, { userId: 'user-123' });\r\n\r\n      // Should trigger security alert for critical events\r\n      expect(auditLogger).toBeDefined();\r\n    });\r\n  });\r\n\r\n  describe('logPerformanceEvent', () => {\r\n    it('should log slow operations', async () => {\r\n      const event = {\r\n        operation: 'DATABASE_QUERY',\r\n        duration: 5000,\r\n        threshold: 1000,\r\n        metadata: {\r\n          query: 'SELECT * FROM large_table',\r\n          rows: 10000\r\n        }\r\n      };\r\n\r\n      const context = {\r\n        userId: 'user-123',\r\n        requestId: 'req-123'\r\n      };\r\n\r\n      await auditLogger.logPerformanceEvent(event, context);\r\n\r\n      expect(auditLogger).toBeDefined();\r\n    });\r\n\r\n    it('should not log fast operations as warnings', async () => {\r\n      const event = {\r\n        operation: 'CACHE_GET',\r\n        duration: 50,\r\n        threshold: 1000\r\n      };\r\n\r\n      await auditLogger.logPerformanceEvent(event);\r\n\r\n      // Should only log as performance metric, not as warning\r\n      expect(auditLogger).toBeDefined();\r\n    });\r\n  });\r\n\r\n  describe('logSystemEvent', () => {\r\n    it('should log successful system events', async () => {\r\n      await auditLogger.logSystemEvent('DATABASE_BACKUP', {\r\n        size: '1.2GB',\r\n        duration: '5 minutes',\r\n        location: '/backups/db_20240101.sql'\r\n      });\r\n\r\n      expect(auditLogger).toBeDefined();\r\n    });\r\n\r\n    it('should log failed system events with errors', async () => {\r\n      const error = new Error('Disk space insufficient');\r\n\r\n      await auditLogger.logSystemEvent(\r\n        'DATABASE_BACKUP',\r\n        { attemptedLocation: '/backups/' },\r\n        false,\r\n        error\r\n      );\r\n\r\n      expect(auditLogger).toBeDefined();\r\n    });\r\n  });\r\n\r\n  describe('getUserAuditTrail', () => {\r\n    it('should return empty array for now', async () => {\r\n      const trail = await auditLogger.getUserAuditTrail('user-123', {\r\n        startDate: new Date('2024-01-01'),\r\n        endDate: new Date('2024-01-02'),\r\n        limit: 100\r\n      });\r\n\r\n      expect(trail).toEqual([]);\r\n    });\r\n  });\r\n\r\n  describe('getSecurityEvents', () => {\r\n    it('should return empty array for now', async () => {\r\n      const events = await auditLogger.getSecurityEvents({\r\n        severity: 'high',\r\n        limit: 50\r\n      });\r\n\r\n      expect(events).toEqual([]);\r\n    });\r\n  });\r\n});\r\n\r\ndescribe('Audit Logger Convenience Functions', () => {\r\n  beforeEach(() => {\r\n    vi.clearAllMocks();\r\n  });\r\n\r\n  it('should provide convenience function for user actions', async () => {\r\n    const action = {\r\n      action: 'LOGIN',\r\n      resource: 'auth'\r\n    };\r\n\r\n    await expect(\r\n      auditUserAction('user-123', action)\r\n    ).resolves.not.toThrow();\r\n  });\r\n\r\n  it('should provide convenience function for security events', async () => {\r\n    const event = {\r\n      type: 'login' as const,\r\n      severity: 'low' as const,\r\n      details: { success: true }\r\n    };\r\n\r\n    await expect(\r\n      auditSecurityEvent(event)\r\n    ).resolves.not.toThrow();\r\n  });\r\n});"],"version":3}