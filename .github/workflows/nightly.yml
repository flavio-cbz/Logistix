name: Nightly Tests

on:
  schedule:
    # Run every night at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup test database
        run: npm run db:initialize

      - name: Run smoke performance suite
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3000
        run: |
          npx playwright test \
            --config=playwright.config.ts \
            --project=chromium \
            --grep "@smoke"

      - name: Run quality checks
        run: npm run checks

      - name: Upload performance reports
        uses: actions/upload-artifact@v4
        with:
          name: performance-reports
          path: |
            test-results/
            playwright-report/

  security-tests:
    name: Security Vulnerability Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup test database
        run: npm run db:initialize

      - name: Run security tests
        run: npm run test:unit

      - name: Run penetration tests
        run: npm run test:integration

      - name: Upload security test reports
        uses: actions/upload-artifact@v4
        with:
          name: security-test-reports
          path: test-results/

  cross-browser:
    name: Cross-Browser Testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Setup test database
        run: npm run db:initialize

      - name: Run cross-browser tests
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3000
        run: npx playwright test --config=playwright.config.ts --project=${{ matrix.browser }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cross-browser-results-${{ matrix.browser }}
          path: |
            playwright-report/
            test-results/

  comprehensive:
    name: Comprehensive Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Setup test database
        run: npm run db:initialize

      - name: Run all tests
        run: npm run test:e2e:ci

      - name: Collect coverage
        run: npm run test:coverage

      - name: Upload comprehensive report
        uses: actions/upload-artifact@v4
        with:
          name: comprehensive-test-report
          path: |
            test-results/
            coverage/
            playwright-report/

  notify:
    name: Notify on Failure
    runs-on: ubuntu-latest
    needs: [performance, security-tests, cross-browser, comprehensive]
    if: failure()
    steps:
      - name: Send notification
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: 'Nightly tests failed. Please check the results.'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}